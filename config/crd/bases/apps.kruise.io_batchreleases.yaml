
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.7.0
  creationTimestamp: null
  name: batchreleases.apps.kruise.io
spec:
  group: apps.kruise.io
  names:
    kind: BatchRelease
    listKind: BatchReleaseList
    plural: batchreleases
    singular: batchrelease
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.rolloutTargetSize
      name: TARGET
      type: string
    - jsonPath: .status.upgradedReplicas
      name: UPGRADED
      type: string
    - jsonPath: .status.upgradedReadyReplicas
      name: READY
      type: string
    - jsonPath: .status.batchRollingState
      name: BATCH-STATE
      type: string
    - jsonPath: .status.rollingState
      name: ROLLING-STATE
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: BatchReleaseSpec defines how to describe an update between
              different compRevision
            properties:
              releasePlan:
                description: RolloutPlan is the details on how to rollout the resources
                properties:
                  batchPartition:
                    description: All pods in the batches up to the batchPartition
                      (included) will have the target resource specification while
                      the rest still have the source resource This is designed for
                      the operators to manually rollout Default is the the number
                      of batches which will rollout all the batches
                    format: int32
                    type: integer
                  batches:
                    description: The exact distribution among batches. its size has
                      to be exactly the same as the NumBatches (if set) The total
                      number cannot exceed the targetSize or the size of the source
                      resource We will IGNORE the last batch's replica field if it's
                      a percentage since round errors can lead to inaccurate sum We
                      highly recommend to leave the last batch's replica field empty
                    items:
                      description: ReleaseBatch is used to describe how the each batch
                        rollout should be
                      properties:
                        maxUnavailable:
                          anyOf:
                          - type: integer
                          - type: string
                          description: MaxUnavailable is the max allowed number of
                            pods that is unavailable during the upgrade. We will mark
                            the batch as ready as long as there are less or equal
                            number of pods unavailable than this number. default =
                            0
                          x-kubernetes-int-or-string: true
                        pauseSeconds:
                          description: The wait time, in seconds, between instances
                            upgrades, default = 0
                          format: int64
                          type: integer
                        replicas:
                          anyOf:
                          - type: integer
                          - type: string
                          description: 'Replicas is the number of pods to upgrade
                            in this batch it can be an absolute number (ex: 5) or
                            a percentage of total pods we will ignore the percentage
                            of the last batch to just fill the gap it is mutually
                            exclusive with the PodList field'
                          x-kubernetes-int-or-string: true
                      type: object
                    type: array
                  paused:
                    description: Paused the rollout, default is false
                    type: boolean
                  strategy:
                    description: RolloutStrategy defines strategies for the rollout
                      plan The default is IncreaseFirstRolloutStrategyType
                    type: string
                type: object
              targetReference:
                description: TargetRevisionName contains the name of the componentRevisionName
                  that we need to upgrade to.
                properties:
                  apiVersion:
                    description: API version of the referent.
                    type: string
                  kind:
                    description: Kind of the referent.
                    type: string
                  name:
                    description: Name of the referent.
                    type: string
                required:
                - apiVersion
                - kind
                - name
                type: object
            required:
            - releasePlan
            - targetReference
            type: object
          status:
            description: BatchReleaseStatus defines the observed state of a rollout
              plan
            properties:
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time this condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A Message containing details about this condition's
                        last transition from one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: Type of this condition. At most one of each condition
                        type may apply to a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
              currentBatch:
                description: The current batch the rollout is working on/blocked it
                  starts from 0
                format: int32
                type: integer
              lastBatchFinalizedTime:
                format: date-time
                type: string
              lastUpdateRevision:
                description: LastUpdateRevision is a string that uniquely represent
                  the last pod template each workload type could use different ways
                  to identify that so we cannot compare between resources We update
                  this field only after a successful rollout
                type: string
              observedReleasePlanHash:
                type: string
              observedWorkloadReplicas:
                description: ObservedWorkloadReplicas is the size of the target resources.
                  This is determined once the initial spec verification and does not
                  change until the rollout is restarted
                format: int32
                type: integer
              releasingBatchState:
                description: ReleasingBatchState only meaningful when the Status is
                  rolling
                type: string
              releasingState:
                description: ReleasingState is the Rollout State
                type: string
              stableRevision:
                description: StableRevision
                type: string
              updateRevision:
                description: UpdateRevision
                type: string
              upgradedReadyReplicas:
                description: UpgradedReadyReplicas is the number of Pods upgraded
                  by the rollout controller that have a Ready Condition.
                format: int32
                type: integer
              upgradedReplicas:
                description: UpgradedReplicas is the number of Pods upgraded by the
                  rollout controller
                format: int32
                type: integer
            required:
            - currentBatch
            - releasingState
            - upgradedReadyReplicas
            - upgradedReplicas
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
